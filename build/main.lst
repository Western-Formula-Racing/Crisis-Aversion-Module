ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv5-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Src/main.c"
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_GPIO_Init:
  28              	.LFB347:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****  ******************************************************************************
   4:Src/main.c    ****  * @file           : main.c
   5:Src/main.c    ****  * @brief          : Main program body
   6:Src/main.c    ****  ******************************************************************************
   7:Src/main.c    ****  * @attention
   8:Src/main.c    ****  *
   9:Src/main.c    ****  * Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****  * All rights reserved.
  11:Src/main.c    ****  *
  12:Src/main.c    ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****  * in the root directory of this software component.
  14:Src/main.c    ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****  *
  16:Src/main.c    ****  ******************************************************************************
  17:Src/main.c    ****  */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** 
  25:Src/main.c    **** /* USER CODE END Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN PTD */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PD */
  34:Src/main.c    **** /* USER CODE END PD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PM */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  42:Src/main.c    **** ADC_HandleTypeDef hadc1;
  43:Src/main.c    **** 
  44:Src/main.c    **** DMA_HandleTypeDef handle_GPDMA1_Channel10;
  45:Src/main.c    **** 
  46:Src/main.c    **** UART_HandleTypeDef huart1;
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** static void SystemPower_Config(void);
  55:Src/main.c    **** static void MX_GPIO_Init(void);
  56:Src/main.c    **** static void MX_GPDMA1_Init(void);
  57:Src/main.c    **** static void MX_ICACHE_Init(void);
  58:Src/main.c    **** static void MX_ADC1_Init(void);
  59:Src/main.c    **** static void MX_USART1_UART_Init(void);
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** int setMux(int channel);
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** #define ADC_CONVERTED_DATA_BUFFER_SIZE ((uint32_t)12) /* Size of array aADCxConvertedData[] */
  67:Src/main.c    **** /* Variable containing ADC conversions data */
  68:Src/main.c    **** uint32_t aADCxConvertedData[ADC_CONVERTED_DATA_BUFFER_SIZE];
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   * @retval int
  74:Src/main.c    ****   */
  75:Src/main.c    **** int main(void)
  76:Src/main.c    **** {
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
  78:Src/main.c    ****   /* STM32U5xx HAL library initialization:
  79:Src/main.c    ****        - Configure the Flash prefetch
  80:Src/main.c    ****        - Configure the Systick to generate an interrupt each 1 msec
  81:Src/main.c    ****        - Set NVIC Group Priority to 3
  82:Src/main.c    ****        - Low Level Initialization
  83:Src/main.c    ****      */
  84:Src/main.c    ****   /* USER CODE END 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  87:Src/main.c    **** 
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 3


  88:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Src/main.c    ****   HAL_Init();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Configure the System Power */
  99:Src/main.c    ****   SystemPower_Config();
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Initialize all configured peripherals */
 106:Src/main.c    ****   MX_GPIO_Init();
 107:Src/main.c    ****   MX_GPDMA1_Init();
 108:Src/main.c    ****   MX_ICACHE_Init();
 109:Src/main.c    ****   MX_ADC1_Init();
 110:Src/main.c    ****   MX_USART1_UART_Init();
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 112:Src/main.c    ****   MX_ADCQueue_Config();
 113:Src/main.c    ****   __HAL_LINKDMA(&hadc1, DMA_Handle, handle_GPDMA1_Channel10);
 114:Src/main.c    ****   if (HAL_DMAEx_List_LinkQ(&handle_GPDMA1_Channel10, &ADCQueue) != HAL_OK)
 115:Src/main.c    ****   {
 116:Src/main.c    ****     Error_Handler();
 117:Src/main.c    ****   }
 118:Src/main.c    ****   if (HAL_ADC_Start_DMA(&hadc1,
 119:Src/main.c    ****                         (uint32_t *)aADCxConvertedData,
 120:Src/main.c    ****                         (ADC_CONVERTED_DATA_BUFFER_SIZE)) != HAL_OK)
 121:Src/main.c    ****   {
 122:Src/main.c    ****     Error_Handler();
 123:Src/main.c    ****   }
 124:Src/main.c    ****   /* USER CODE END 2 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Infinite loop */
 127:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 128:Src/main.c    **** 
 129:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, aADCxConvertedData, 6);
 130:Src/main.c    **** 
 131:Src/main.c    ****   uint8_t str[60];
 132:Src/main.c    ****   while (1)
 133:Src/main.c    ****   {
 134:Src/main.c    ****     for (int i = 1; i<=6; i++) {
 135:Src/main.c    ****       setMux(i);
 136:Src/main.c    ****       HAL_Delay(1000);
 137:Src/main.c    ****       sprintf(str,"Channel %d raw: %d",i, aADCxConvertedData[i - 1]);
 138:Src/main.c    ****       // HAL_UART_Transmit(&huart1, str, sizeof(str), 1000);
 139:Src/main.c    ****       // printf("Channel %d raw: %d", i, aADCxConvertedData[i - 1]);
 140:Src/main.c    ****     }
 141:Src/main.c    **** 
 142:Src/main.c    ****     /* USER CODE END WHILE */
 143:Src/main.c    **** 
 144:Src/main.c    ****     /* USER CODE BEGIN 3 */
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 4


 145:Src/main.c    ****   }
 146:Src/main.c    ****   /* USER CODE END 3 */
 147:Src/main.c    **** }
 148:Src/main.c    **** 
 149:Src/main.c    **** /**
 150:Src/main.c    ****   * @brief System Clock Configuration
 151:Src/main.c    ****   * @retval None
 152:Src/main.c    ****   */
 153:Src/main.c    **** void SystemClock_Config(void)
 154:Src/main.c    **** {
 155:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 156:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 157:Src/main.c    **** 
 158:Src/main.c    ****   /** Configure the main internal regulator output voltage
 159:Src/main.c    ****   */
 160:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     Error_Handler();
 163:Src/main.c    ****   }
 164:Src/main.c    **** 
 165:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Src/main.c    ****   */
 167:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_MSI;
 168:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 169:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 170:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 171:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 172:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 80;
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 2;
 179:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLLVCIRANGE_0;
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 183:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 184:Src/main.c    ****   {
 185:Src/main.c    ****     Error_Handler();
 186:Src/main.c    ****   }
 187:Src/main.c    **** 
 188:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 189:Src/main.c    ****   */
 190:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 191:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 192:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK3;
 193:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 194:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 195:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 197:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 198:Src/main.c    **** 
 199:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     Error_Handler();
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 5


 202:Src/main.c    ****   }
 203:Src/main.c    **** }
 204:Src/main.c    **** 
 205:Src/main.c    **** /**
 206:Src/main.c    ****   * @brief Power Configuration
 207:Src/main.c    ****   * @retval None
 208:Src/main.c    ****   */
 209:Src/main.c    **** static void SystemPower_Config(void)
 210:Src/main.c    **** {
 211:Src/main.c    ****   HAL_PWREx_EnableVddIO2();
 212:Src/main.c    **** 
 213:Src/main.c    ****   /*
 214:Src/main.c    ****    * Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
 215:Src/main.c    ****    */
 216:Src/main.c    ****   HAL_PWREx_DisableUCPDDeadBattery();
 217:Src/main.c    **** 
 218:Src/main.c    ****   /*
 219:Src/main.c    ****    * Switch to SMPS regulator instead of LDO
 220:Src/main.c    ****    */
 221:Src/main.c    ****   if (HAL_PWREx_ConfigSupply(PWR_SMPS_SUPPLY) != HAL_OK)
 222:Src/main.c    ****   {
 223:Src/main.c    ****     Error_Handler();
 224:Src/main.c    ****   }
 225:Src/main.c    **** /* USER CODE BEGIN PWR */
 226:Src/main.c    **** /* USER CODE END PWR */
 227:Src/main.c    **** }
 228:Src/main.c    **** 
 229:Src/main.c    **** /**
 230:Src/main.c    ****   * @brief ADC1 Initialization Function
 231:Src/main.c    ****   * @param None
 232:Src/main.c    ****   * @retval None
 233:Src/main.c    ****   */
 234:Src/main.c    **** static void MX_ADC1_Init(void)
 235:Src/main.c    **** {
 236:Src/main.c    **** 
 237:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 240:Src/main.c    **** 
 241:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 246:Src/main.c    **** 
 247:Src/main.c    ****   /** Common config
 248:Src/main.c    ****   */
 249:Src/main.c    ****   hadc1.Instance = ADC1;
 250:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 251:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_14B;
 252:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 253:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 254:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 255:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 256:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 257:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 258:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 6


 259:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 260:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 261:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 262:Src/main.c    ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 263:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 264:Src/main.c    ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 265:Src/main.c    ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DMA_CIRCULAR;
 266:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 267:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 268:Src/main.c    ****   {
 269:Src/main.c    ****     Error_Handler();
 270:Src/main.c    ****   }
 271:Src/main.c    **** 
 272:Src/main.c    ****   /** Configure Regular Channel
 273:Src/main.c    ****   */
 274:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_8;
 275:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 276:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_5CYCLE;
 277:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 278:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 279:Src/main.c    ****   sConfig.Offset = 0;
 280:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281:Src/main.c    ****   {
 282:Src/main.c    ****     Error_Handler();
 283:Src/main.c    ****   }
 284:Src/main.c    **** 
 285:Src/main.c    ****   /** Configure Regular Channel
 286:Src/main.c    ****   */
 287:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_7;
 288:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 289:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 290:Src/main.c    ****   {
 291:Src/main.c    ****     Error_Handler();
 292:Src/main.c    ****   }
 293:Src/main.c    **** 
 294:Src/main.c    ****   /** Configure Regular Channel
 295:Src/main.c    ****   */
 296:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_4;
 297:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 298:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     Error_Handler();
 301:Src/main.c    ****   }
 302:Src/main.c    **** 
 303:Src/main.c    ****   /** Configure Regular Channel
 304:Src/main.c    ****   */
 305:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_15;
 306:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 307:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 308:Src/main.c    ****   {
 309:Src/main.c    ****     Error_Handler();
 310:Src/main.c    ****   }
 311:Src/main.c    **** 
 312:Src/main.c    ****   /** Configure Regular Channel
 313:Src/main.c    ****   */
 314:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_2;
 315:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 7


 316:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES;
 317:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 318:Src/main.c    ****   {
 319:Src/main.c    ****     Error_Handler();
 320:Src/main.c    ****   }
 321:Src/main.c    **** 
 322:Src/main.c    ****   /** Configure Regular Channel
 323:Src/main.c    ****   */
 324:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 325:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 326:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_5CYCLE;
 327:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 328:Src/main.c    ****   {
 329:Src/main.c    ****     Error_Handler();
 330:Src/main.c    ****   }
 331:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 332:Src/main.c    **** 
 333:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 334:Src/main.c    **** 
 335:Src/main.c    **** }
 336:Src/main.c    **** 
 337:Src/main.c    **** /**
 338:Src/main.c    ****   * @brief GPDMA1 Initialization Function
 339:Src/main.c    ****   * @param None
 340:Src/main.c    ****   * @retval None
 341:Src/main.c    ****   */
 342:Src/main.c    **** static void MX_GPDMA1_Init(void)
 343:Src/main.c    **** {
 344:Src/main.c    **** 
 345:Src/main.c    ****   /* USER CODE BEGIN GPDMA1_Init 0 */
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE END GPDMA1_Init 0 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* Peripheral clock enable */
 350:Src/main.c    ****   __HAL_RCC_GPDMA1_CLK_ENABLE();
 351:Src/main.c    **** 
 352:Src/main.c    ****   /* GPDMA1 interrupt Init */
 353:Src/main.c    ****     HAL_NVIC_SetPriority(GPDMA1_Channel10_IRQn, 0, 0);
 354:Src/main.c    ****     HAL_NVIC_EnableIRQ(GPDMA1_Channel10_IRQn);
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE BEGIN GPDMA1_Init 1 */
 357:Src/main.c    **** 
 358:Src/main.c    ****   /* USER CODE END GPDMA1_Init 1 */
 359:Src/main.c    ****   handle_GPDMA1_Channel10.Instance = GPDMA1_Channel10;
 360:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 361:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkStepMode = DMA_LSM_FULL_EXECUTION;
 362:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkAllocatedPort = DMA_LINK_ALLOCATED_PORT1;
 363:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.TransferEventMode = DMA_TCEM_LAST_LL_ITEM_TRANSFER;
 364:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkedListMode = DMA_LINKEDLIST_CIRCULAR;
 365:Src/main.c    ****   if (HAL_DMAEx_List_Init(&handle_GPDMA1_Channel10) != HAL_OK)
 366:Src/main.c    ****   {
 367:Src/main.c    ****     Error_Handler();
 368:Src/main.c    ****   }
 369:Src/main.c    ****   if (HAL_DMA_ConfigChannelAttributes(&handle_GPDMA1_Channel10, DMA_CHANNEL_NPRIV) != HAL_OK)
 370:Src/main.c    ****   {
 371:Src/main.c    ****     Error_Handler();
 372:Src/main.c    ****   }
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 8


 373:Src/main.c    ****   /* USER CODE BEGIN GPDMA1_Init 2 */
 374:Src/main.c    **** 
 375:Src/main.c    ****   /* USER CODE END GPDMA1_Init 2 */
 376:Src/main.c    **** 
 377:Src/main.c    **** }
 378:Src/main.c    **** 
 379:Src/main.c    **** /**
 380:Src/main.c    ****   * @brief ICACHE Initialization Function
 381:Src/main.c    ****   * @param None
 382:Src/main.c    ****   * @retval None
 383:Src/main.c    ****   */
 384:Src/main.c    **** static void MX_ICACHE_Init(void)
 385:Src/main.c    **** {
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* USER CODE BEGIN ICACHE_Init 0 */
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* USER CODE END ICACHE_Init 0 */
 390:Src/main.c    **** 
 391:Src/main.c    ****   /* USER CODE BEGIN ICACHE_Init 1 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE END ICACHE_Init 1 */
 394:Src/main.c    **** 
 395:Src/main.c    ****   /** Enable instruction cache in 1-way (direct mapped cache)
 396:Src/main.c    ****   */
 397:Src/main.c    ****   if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 398:Src/main.c    ****   {
 399:Src/main.c    ****     Error_Handler();
 400:Src/main.c    ****   }
 401:Src/main.c    ****   if (HAL_ICACHE_Enable() != HAL_OK)
 402:Src/main.c    ****   {
 403:Src/main.c    ****     Error_Handler();
 404:Src/main.c    ****   }
 405:Src/main.c    ****   /* USER CODE BEGIN ICACHE_Init 2 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END ICACHE_Init 2 */
 408:Src/main.c    **** 
 409:Src/main.c    **** }
 410:Src/main.c    **** 
 411:Src/main.c    **** /**
 412:Src/main.c    ****   * @brief USART1 Initialization Function
 413:Src/main.c    ****   * @param None
 414:Src/main.c    ****   * @retval None
 415:Src/main.c    ****   */
 416:Src/main.c    **** static void MX_USART1_UART_Init(void)
 417:Src/main.c    **** {
 418:Src/main.c    **** 
 419:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 422:Src/main.c    **** 
 423:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 424:Src/main.c    **** 
 425:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 426:Src/main.c    ****   huart1.Instance = USART1;
 427:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 428:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 429:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 9


 430:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 431:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 432:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 433:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 434:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 435:Src/main.c    ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 436:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 437:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 438:Src/main.c    ****   {
 439:Src/main.c    ****     Error_Handler();
 440:Src/main.c    ****   }
 441:Src/main.c    ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 442:Src/main.c    ****   {
 443:Src/main.c    ****     Error_Handler();
 444:Src/main.c    ****   }
 445:Src/main.c    ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 446:Src/main.c    ****   {
 447:Src/main.c    ****     Error_Handler();
 448:Src/main.c    ****   }
 449:Src/main.c    ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 450:Src/main.c    ****   {
 451:Src/main.c    ****     Error_Handler();
 452:Src/main.c    ****   }
 453:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 454:Src/main.c    **** 
 455:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 456:Src/main.c    **** 
 457:Src/main.c    **** }
 458:Src/main.c    **** 
 459:Src/main.c    **** /**
 460:Src/main.c    ****   * @brief GPIO Initialization Function
 461:Src/main.c    ****   * @param None
 462:Src/main.c    ****   * @retval None
 463:Src/main.c    ****   */
 464:Src/main.c    **** static void MX_GPIO_Init(void)
 465:Src/main.c    **** {
  29              		.loc 1 465 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 8DB0     		sub	sp, sp, #52
  41              		.cfi_def_cfa_offset 72
 466:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 466 3 view .LVU1
  43              		.loc 1 466 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0794     		str	r4, [sp, #28]
  46 0008 0894     		str	r4, [sp, #32]
  47 000a 0994     		str	r4, [sp, #36]
  48 000c 0A94     		str	r4, [sp, #40]
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 10


  49 000e 0B94     		str	r4, [sp, #44]
 467:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 468:Src/main.c    **** /* USER CODE END MX_GPIO_Init_1 */
 469:Src/main.c    **** 
 470:Src/main.c    ****   /* GPIO Ports Clock Enable */
 471:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 471 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 471 3 view .LVU4
  53              		.loc 1 471 3 view .LVU5
  54 0010 3B4B     		ldr	r3, .L3
  55 0012 D3F88C20 		ldr	r2, [r3, #140]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a C3F88C20 		str	r2, [r3, #140]
  58              		.loc 1 471 3 view .LVU6
  59 001e D3F88C20 		ldr	r2, [r3, #140]
  60 0022 02F00402 		and	r2, r2, #4
  61 0026 0192     		str	r2, [sp, #4]
  62              		.loc 1 471 3 view .LVU7
  63 0028 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 471 3 view .LVU8
 472:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 472 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 472 3 view .LVU10
  69              		.loc 1 472 3 view .LVU11
  70 002a D3F88C20 		ldr	r2, [r3, #140]
  71 002e 42F00102 		orr	r2, r2, #1
  72 0032 C3F88C20 		str	r2, [r3, #140]
  73              		.loc 1 472 3 view .LVU12
  74 0036 D3F88C20 		ldr	r2, [r3, #140]
  75 003a 02F00102 		and	r2, r2, #1
  76 003e 0292     		str	r2, [sp, #8]
  77              		.loc 1 472 3 view .LVU13
  78 0040 029A     		ldr	r2, [sp, #8]
  79              	.LBE5:
  80              		.loc 1 472 3 view .LVU14
 473:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  81              		.loc 1 473 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 473 3 view .LVU16
  84              		.loc 1 473 3 view .LVU17
  85 0042 D3F88C20 		ldr	r2, [r3, #140]
  86 0046 42F00202 		orr	r2, r2, #2
  87 004a C3F88C20 		str	r2, [r3, #140]
  88              		.loc 1 473 3 view .LVU18
  89 004e D3F88C20 		ldr	r2, [r3, #140]
  90 0052 02F00202 		and	r2, r2, #2
  91 0056 0392     		str	r2, [sp, #12]
  92              		.loc 1 473 3 view .LVU19
  93 0058 039A     		ldr	r2, [sp, #12]
  94              	.LBE6:
  95              		.loc 1 473 3 view .LVU20
 474:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  96              		.loc 1 474 3 view .LVU21
  97              	.LBB7:
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 11


  98              		.loc 1 474 3 view .LVU22
  99              		.loc 1 474 3 view .LVU23
 100 005a D3F88C20 		ldr	r2, [r3, #140]
 101 005e 42F02002 		orr	r2, r2, #32
 102 0062 C3F88C20 		str	r2, [r3, #140]
 103              		.loc 1 474 3 view .LVU24
 104 0066 D3F88C20 		ldr	r2, [r3, #140]
 105 006a 02F02002 		and	r2, r2, #32
 106 006e 0492     		str	r2, [sp, #16]
 107              		.loc 1 474 3 view .LVU25
 108 0070 049A     		ldr	r2, [sp, #16]
 109              	.LBE7:
 110              		.loc 1 474 3 view .LVU26
 475:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 111              		.loc 1 475 3 view .LVU27
 112              	.LBB8:
 113              		.loc 1 475 3 view .LVU28
 114              		.loc 1 475 3 view .LVU29
 115 0072 D3F88C20 		ldr	r2, [r3, #140]
 116 0076 42F01002 		orr	r2, r2, #16
 117 007a C3F88C20 		str	r2, [r3, #140]
 118              		.loc 1 475 3 view .LVU30
 119 007e D3F88C20 		ldr	r2, [r3, #140]
 120 0082 02F01002 		and	r2, r2, #16
 121 0086 0592     		str	r2, [sp, #20]
 122              		.loc 1 475 3 view .LVU31
 123 0088 059A     		ldr	r2, [sp, #20]
 124              	.LBE8:
 125              		.loc 1 475 3 view .LVU32
 476:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 126              		.loc 1 476 3 view .LVU33
 127              	.LBB9:
 128              		.loc 1 476 3 view .LVU34
 129              		.loc 1 476 3 view .LVU35
 130 008a D3F88C20 		ldr	r2, [r3, #140]
 131 008e 42F04002 		orr	r2, r2, #64
 132 0092 C3F88C20 		str	r2, [r3, #140]
 133              		.loc 1 476 3 view .LVU36
 134 0096 D3F88C30 		ldr	r3, [r3, #140]
 135 009a 03F04003 		and	r3, r3, #64
 136 009e 0693     		str	r3, [sp, #24]
 137              		.loc 1 476 3 view .LVU37
 138 00a0 069B     		ldr	r3, [sp, #24]
 139              	.LBE9:
 140              		.loc 1 476 3 view .LVU38
 477:Src/main.c    **** 
 478:Src/main.c    ****   /*Configure GPIO pin Output Level */
 479:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13|GPIO_PIN_15, GPIO_PIN_RESET);
 141              		.loc 1 479 3 view .LVU39
 142 00a2 184F     		ldr	r7, .L3+4
 143 00a4 2246     		mov	r2, r4
 144 00a6 4FF42041 		mov	r1, #40960
 145 00aa 3846     		mov	r0, r7
 146 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL0:
 480:Src/main.c    **** 
 481:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 12


 482:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, GPIO_PIN_RESET);
 148              		.loc 1 482 3 view .LVU40
 149 00b0 154D     		ldr	r5, .L3+8
 150 00b2 2246     		mov	r2, r4
 151 00b4 4FF40061 		mov	r1, #2048
 152 00b8 2846     		mov	r0, r5
 153 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL1:
 483:Src/main.c    **** 
 484:Src/main.c    ****   /*Configure GPIO pins : PF13 PF15 */
 485:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 155              		.loc 1 485 3 view .LVU41
 156              		.loc 1 485 23 is_stmt 0 view .LVU42
 157 00be 4FF42043 		mov	r3, #40960
 158 00c2 0793     		str	r3, [sp, #28]
 486:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 159              		.loc 1 486 3 is_stmt 1 view .LVU43
 160              		.loc 1 486 24 is_stmt 0 view .LVU44
 161 00c4 0126     		movs	r6, #1
 162 00c6 0896     		str	r6, [sp, #32]
 487:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 163              		.loc 1 487 3 is_stmt 1 view .LVU45
 164              		.loc 1 487 24 is_stmt 0 view .LVU46
 165 00c8 0994     		str	r4, [sp, #36]
 488:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 166              		.loc 1 488 3 is_stmt 1 view .LVU47
 167              		.loc 1 488 25 is_stmt 0 view .LVU48
 168 00ca 0A94     		str	r4, [sp, #40]
 489:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 169              		.loc 1 489 3 is_stmt 1 view .LVU49
 170 00cc 07A9     		add	r1, sp, #28
 171 00ce 3846     		mov	r0, r7
 172 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL2:
 490:Src/main.c    **** 
 491:Src/main.c    ****   /*Configure GPIO pin : PE11 */
 492:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_11;
 174              		.loc 1 492 3 view .LVU50
 175              		.loc 1 492 23 is_stmt 0 view .LVU51
 176 00d4 4FF40063 		mov	r3, #2048
 177 00d8 0793     		str	r3, [sp, #28]
 493:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 178              		.loc 1 493 3 is_stmt 1 view .LVU52
 179              		.loc 1 493 24 is_stmt 0 view .LVU53
 180 00da 0896     		str	r6, [sp, #32]
 494:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 494 3 is_stmt 1 view .LVU54
 182              		.loc 1 494 24 is_stmt 0 view .LVU55
 183 00dc 0994     		str	r4, [sp, #36]
 495:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 184              		.loc 1 495 3 is_stmt 1 view .LVU56
 185              		.loc 1 495 25 is_stmt 0 view .LVU57
 186 00de 0A94     		str	r4, [sp, #40]
 496:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 187              		.loc 1 496 3 is_stmt 1 view .LVU58
 188 00e0 07A9     		add	r1, sp, #28
 189 00e2 2846     		mov	r0, r5
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 13


 190 00e4 FFF7FEFF 		bl	HAL_GPIO_Init
 191              	.LVL3:
 497:Src/main.c    **** 
 498:Src/main.c    ****   /*Configure GPIO pin : PG15 */
 499:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 192              		.loc 1 499 3 view .LVU59
 193              		.loc 1 499 23 is_stmt 0 view .LVU60
 194 00e8 4FF40043 		mov	r3, #32768
 195 00ec 0793     		str	r3, [sp, #28]
 500:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 196              		.loc 1 500 3 is_stmt 1 view .LVU61
 197              		.loc 1 500 24 is_stmt 0 view .LVU62
 198 00ee 074B     		ldr	r3, .L3+12
 199 00f0 0893     		str	r3, [sp, #32]
 501:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 200              		.loc 1 501 3 is_stmt 1 view .LVU63
 201              		.loc 1 501 24 is_stmt 0 view .LVU64
 202 00f2 0994     		str	r4, [sp, #36]
 502:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 203              		.loc 1 502 3 is_stmt 1 view .LVU65
 204 00f4 07A9     		add	r1, sp, #28
 205 00f6 0648     		ldr	r0, .L3+16
 206 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 207              	.LVL4:
 503:Src/main.c    **** 
 504:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 505:Src/main.c    **** /* USER CODE END MX_GPIO_Init_2 */
 506:Src/main.c    **** }
 208              		.loc 1 506 1 is_stmt 0 view .LVU66
 209 00fc 0DB0     		add	sp, sp, #52
 210              		.cfi_def_cfa_offset 20
 211              		@ sp needed
 212 00fe F0BD     		pop	{r4, r5, r6, r7, pc}
 213              	.L4:
 214              		.align	2
 215              	.L3:
 216 0100 000C0246 		.word	1174539264
 217 0104 00140242 		.word	1107432448
 218 0108 00100242 		.word	1107431424
 219 010c 00001110 		.word	269549568
 220 0110 00180242 		.word	1107433472
 221              		.cfi_endproc
 222              	.LFE347:
 224              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 225              		.align	1
 226              		.global	HAL_ADC_ConvHalfCpltCallback
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	HAL_ADC_ConvHalfCpltCallback:
 232              	.LVL5:
 233              	.LFB348:
 507:Src/main.c    **** 
 508:Src/main.c    **** /* USER CODE BEGIN 4 */
 509:Src/main.c    **** 
 510:Src/main.c    **** /**
 511:Src/main.c    ****  * @brief  Conversion complete callback in non-blocking mode
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 14


 512:Src/main.c    ****  * @param  hadc: ADC handle
 513:Src/main.c    ****  * @retval None
 514:Src/main.c    ****  */
 515:Src/main.c    **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
 516:Src/main.c    **** {
 234              		.loc 1 516 1 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 517:Src/main.c    ****   /* Add code to be performed after DMA half complete */
 518:Src/main.c    **** }
 239              		.loc 1 518 1 view .LVU68
 240 0000 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE348:
 244              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 245              		.align	1
 246              		.global	HAL_ADC_ConvCpltCallback
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	HAL_ADC_ConvCpltCallback:
 252              	.LVL6:
 253              	.LFB349:
 519:Src/main.c    **** 
 520:Src/main.c    **** /**
 521:Src/main.c    ****  * @brief  Conversion DMA half-transfer callback in non-blocking mode
 522:Src/main.c    ****  * @param  hadc: ADC handle
 523:Src/main.c    ****  * @retval None
 524:Src/main.c    ****  */
 525:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
 526:Src/main.c    **** {
 254              		.loc 1 526 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 527:Src/main.c    ****   /* Add code to be performed after DMA full complete */
 528:Src/main.c    **** }
 259              		.loc 1 528 1 view .LVU70
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE349:
 264              		.section	.rodata.setMux.str1.4,"aMS",%progbits,1
 265              		.align	2
 266              	.LC0:
 267 0000 6368616E 		.ascii	"channel %d out of bounds \012\000"
 267      6E656C20 
 267      2564206F 
 267      7574206F 
 267      6620626F 
 268 001b 00       		.align	2
 269              	.LC1:
 270 001c 4368616E 		.ascii	"Channel %d selected\012\000"
 270      6E656C20 
 270      25642073 
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 15


 270      656C6563 
 270      7465640A 
 271              		.section	.text.setMux,"ax",%progbits
 272              		.align	1
 273              		.global	setMux
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	setMux:
 279              	.LVL7:
 280              	.LFB350:
 529:Src/main.c    **** 
 530:Src/main.c    **** int setMux(int channel)
 531:Src/main.c    **** {
 281              		.loc 1 531 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 531 1 is_stmt 0 view .LVU72
 286 0000 38B5     		push	{r3, r4, r5, lr}
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 3, -16
 289              		.cfi_offset 4, -12
 290              		.cfi_offset 5, -8
 291              		.cfi_offset 14, -4
 292 0002 0446     		mov	r4, r0
 532:Src/main.c    ****   if (channel > 6)
 293              		.loc 1 532 3 is_stmt 1 view .LVU73
 294              		.loc 1 532 6 is_stmt 0 view .LVU74
 295 0004 0628     		cmp	r0, #6
 296 0006 1CDC     		bgt	.L11
 533:Src/main.c    ****   {
 534:Src/main.c    ****     printf("channel %d out of bounds \n", channel);
 535:Src/main.c    ****     // selection out of bounds
 536:Src/main.c    ****     return 0;
 537:Src/main.c    ****   }
 538:Src/main.c    ****   printf("Channel %d selected\n", channel);
 297              		.loc 1 538 3 is_stmt 1 view .LVU75
 298 0008 0146     		mov	r1, r0
 299 000a 1148     		ldr	r0, .L12
 300              	.LVL8:
 301              		.loc 1 538 3 is_stmt 0 view .LVU76
 302 000c FFF7FEFF 		bl	printf
 303              	.LVL9:
 539:Src/main.c    ****   channel -= 1; // convert from counting from 1 to counting from 0
 304              		.loc 1 539 3 is_stmt 1 view .LVU77
 305              		.loc 1 539 11 is_stmt 0 view .LVU78
 306 0010 013C     		subs	r4, r4, #1
 307              	.LVL10:
 540:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_13, (channel & (1 << 0)) >> 0);
 308              		.loc 1 540 3 is_stmt 1 view .LVU79
 309 0012 104D     		ldr	r5, .L12+4
 310 0014 04F00102 		and	r2, r4, #1
 311 0018 4FF40051 		mov	r1, #8192
 312 001c 2846     		mov	r0, r5
 313 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 314              	.LVL11:
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 16


 541:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_11, (channel & (1 << 1)) >> 1);
 315              		.loc 1 541 3 view .LVU80
 316 0022 C4F34002 		ubfx	r2, r4, #1, #1
 317 0026 4FF40061 		mov	r1, #2048
 318 002a 0B48     		ldr	r0, .L12+8
 319 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 320              	.LVL12:
 542:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_15, (channel & (1 << 2)) >> 2);
 321              		.loc 1 542 3 view .LVU81
 322 0030 C4F38002 		ubfx	r2, r4, #2, #1
 323 0034 4FF40041 		mov	r1, #32768
 324 0038 2846     		mov	r0, r5
 325 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 326              	.LVL13:
 543:Src/main.c    **** 
 544:Src/main.c    ****   return 1;
 327              		.loc 1 544 3 view .LVU82
 328              		.loc 1 544 10 is_stmt 0 view .LVU83
 329 003e 0120     		movs	r0, #1
 330              	.L7:
 545:Src/main.c    **** }
 331              		.loc 1 545 1 view .LVU84
 332 0040 38BD     		pop	{r3, r4, r5, pc}
 333              	.LVL14:
 334              	.L11:
 335              	.LBB10:
 534:Src/main.c    ****     // selection out of bounds
 336              		.loc 1 534 5 is_stmt 1 view .LVU85
 337 0042 0146     		mov	r1, r0
 338 0044 0548     		ldr	r0, .L12+12
 339              	.LVL15:
 534:Src/main.c    ****     // selection out of bounds
 340              		.loc 1 534 5 is_stmt 0 view .LVU86
 341 0046 FFF7FEFF 		bl	printf
 342              	.LVL16:
 536:Src/main.c    ****   }
 343              		.loc 1 536 5 is_stmt 1 view .LVU87
 536:Src/main.c    ****   }
 344              		.loc 1 536 12 is_stmt 0 view .LVU88
 345 004a 0020     		movs	r0, #0
 346 004c F8E7     		b	.L7
 347              	.L13:
 348 004e 00BF     		.align	2
 349              	.L12:
 350 0050 1C000000 		.word	.LC1
 351 0054 00140242 		.word	1107432448
 352 0058 00100242 		.word	1107431424
 353 005c 00000000 		.word	.LC0
 354              	.LBE10:
 355              		.cfi_endproc
 356              	.LFE350:
 358              		.section	.text.Error_Handler,"ax",%progbits
 359              		.align	1
 360              		.global	Error_Handler
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 17


 365              	Error_Handler:
 366              	.LFB351:
 546:Src/main.c    **** /* USER CODE END 4 */
 547:Src/main.c    **** 
 548:Src/main.c    **** /**
 549:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 550:Src/main.c    ****   * @retval None
 551:Src/main.c    ****   */
 552:Src/main.c    **** void Error_Handler(void)
 553:Src/main.c    **** {
 367              		.loc 1 553 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ Volatile: function does not return.
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 554:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 555:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 556:Src/main.c    ****   __disable_irq();
 373              		.loc 1 556 3 view .LVU90
 374              	.LBB11:
 375              	.LBI11:
 376              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 18


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 19


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 20


 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 21


 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 377              		.loc 2 207 27 view .LVU91
 378              	.LBB12:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 379              		.loc 2 209 3 view .LVU92
 380              		.syntax unified
 381              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 382 0000 72B6     		cpsid i
 383              	@ 0 "" 2
 384              		.thumb
 385              		.syntax unified
 386              	.L15:
 387              	.LBE12:
 388              	.LBE11:
 557:Src/main.c    ****   while (1)
 389              		.loc 1 557 3 discriminator 1 view .LVU93
 558:Src/main.c    ****   {
 559:Src/main.c    ****   }
 390              		.loc 1 559 3 discriminator 1 view .LVU94
 557:Src/main.c    ****   while (1)
 391              		.loc 1 557 9 discriminator 1 view .LVU95
 392 0002 FEE7     		b	.L15
 393              		.cfi_endproc
 394              	.LFE351:
 396              		.section	.text.SystemPower_Config,"ax",%progbits
 397              		.align	1
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	SystemPower_Config:
 403              	.LFB342:
 210:Src/main.c    ****   HAL_PWREx_EnableVddIO2();
 404              		.loc 1 210 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408 0000 08B5     		push	{r3, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
 211:Src/main.c    **** 
 412              		.loc 1 211 3 view .LVU97
 413 0002 FFF7FEFF 		bl	HAL_PWREx_EnableVddIO2
 414              	.LVL17:
 216:Src/main.c    **** 
 415              		.loc 1 216 3 view .LVU98
 416 0006 FFF7FEFF 		bl	HAL_PWREx_DisableUCPDDeadBattery
 417              	.LVL18:
 221:Src/main.c    ****   {
 418              		.loc 1 221 3 view .LVU99
 221:Src/main.c    ****   {
 419              		.loc 1 221 7 is_stmt 0 view .LVU100
 420 000a 0220     		movs	r0, #2
 421 000c FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 422              	.LVL19:
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 22


 221:Src/main.c    ****   {
 423              		.loc 1 221 6 view .LVU101
 424 0010 00B9     		cbnz	r0, .L19
 227:Src/main.c    **** 
 425              		.loc 1 227 1 view .LVU102
 426 0012 08BD     		pop	{r3, pc}
 427              	.L19:
 223:Src/main.c    ****   }
 428              		.loc 1 223 5 is_stmt 1 view .LVU103
 429 0014 FFF7FEFF 		bl	Error_Handler
 430              	.LVL20:
 431              		.cfi_endproc
 432              	.LFE342:
 434              		.section	.text.MX_GPDMA1_Init,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	MX_GPDMA1_Init:
 441              	.LFB344:
 343:Src/main.c    **** 
 442              		.loc 1 343 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 00B5     		push	{lr}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 14, -4
 449 0002 83B0     		sub	sp, sp, #12
 450              		.cfi_def_cfa_offset 16
 350:Src/main.c    **** 
 451              		.loc 1 350 3 view .LVU105
 452              	.LBB13:
 350:Src/main.c    **** 
 453              		.loc 1 350 3 view .LVU106
 350:Src/main.c    **** 
 454              		.loc 1 350 3 view .LVU107
 455 0004 184B     		ldr	r3, .L26
 456 0006 D3F88820 		ldr	r2, [r3, #136]
 457 000a 42F00102 		orr	r2, r2, #1
 458 000e C3F88820 		str	r2, [r3, #136]
 350:Src/main.c    **** 
 459              		.loc 1 350 3 view .LVU108
 460 0012 D3F88830 		ldr	r3, [r3, #136]
 461 0016 03F00103 		and	r3, r3, #1
 462 001a 0193     		str	r3, [sp, #4]
 350:Src/main.c    **** 
 463              		.loc 1 350 3 view .LVU109
 464 001c 019B     		ldr	r3, [sp, #4]
 465              	.LBE13:
 350:Src/main.c    **** 
 466              		.loc 1 350 3 view .LVU110
 353:Src/main.c    ****     HAL_NVIC_EnableIRQ(GPDMA1_Channel10_IRQn);
 467              		.loc 1 353 5 view .LVU111
 468 001e 0022     		movs	r2, #0
 469 0020 1146     		mov	r1, r2
 470 0022 5220     		movs	r0, #82
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 23


 471 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 472              	.LVL21:
 354:Src/main.c    **** 
 473              		.loc 1 354 5 view .LVU112
 474 0028 5220     		movs	r0, #82
 475 002a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 476              	.LVL22:
 359:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 477              		.loc 1 359 3 view .LVU113
 359:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.Priority = DMA_LOW_PRIORITY_LOW_WEIGHT;
 478              		.loc 1 359 36 is_stmt 0 view .LVU114
 479 002e 0F48     		ldr	r0, .L26+4
 480 0030 0F4B     		ldr	r3, .L26+8
 481 0032 0360     		str	r3, [r0]
 360:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkStepMode = DMA_LSM_FULL_EXECUTION;
 482              		.loc 1 360 3 is_stmt 1 view .LVU115
 360:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkStepMode = DMA_LSM_FULL_EXECUTION;
 483              		.loc 1 360 51 is_stmt 0 view .LVU116
 484 0034 0023     		movs	r3, #0
 485 0036 8363     		str	r3, [r0, #56]
 361:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkAllocatedPort = DMA_LINK_ALLOCATED_PORT1;
 486              		.loc 1 361 3 is_stmt 1 view .LVU117
 361:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkAllocatedPort = DMA_LINK_ALLOCATED_PORT1;
 487              		.loc 1 361 55 is_stmt 0 view .LVU118
 488 0038 C363     		str	r3, [r0, #60]
 362:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.TransferEventMode = DMA_TCEM_LAST_LL_ITEM_TRANSFER;
 489              		.loc 1 362 3 is_stmt 1 view .LVU119
 362:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.TransferEventMode = DMA_TCEM_LAST_LL_ITEM_TRANSFER;
 490              		.loc 1 362 60 is_stmt 0 view .LVU120
 491 003a 4FF40033 		mov	r3, #131072
 492 003e 0364     		str	r3, [r0, #64]
 363:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkedListMode = DMA_LINKEDLIST_CIRCULAR;
 493              		.loc 1 363 3 is_stmt 1 view .LVU121
 363:Src/main.c    ****   handle_GPDMA1_Channel10.InitLinkedList.LinkedListMode = DMA_LINKEDLIST_CIRCULAR;
 494              		.loc 1 363 60 is_stmt 0 view .LVU122
 495 0040 4FF04043 		mov	r3, #-1073741824
 496 0044 4364     		str	r3, [r0, #68]
 364:Src/main.c    ****   if (HAL_DMAEx_List_Init(&handle_GPDMA1_Channel10) != HAL_OK)
 497              		.loc 1 364 3 is_stmt 1 view .LVU123
 364:Src/main.c    ****   if (HAL_DMAEx_List_Init(&handle_GPDMA1_Channel10) != HAL_OK)
 498              		.loc 1 364 57 is_stmt 0 view .LVU124
 499 0046 8123     		movs	r3, #129
 500 0048 8364     		str	r3, [r0, #72]
 365:Src/main.c    ****   {
 501              		.loc 1 365 3 is_stmt 1 view .LVU125
 365:Src/main.c    ****   {
 502              		.loc 1 365 7 is_stmt 0 view .LVU126
 503 004a FFF7FEFF 		bl	HAL_DMAEx_List_Init
 504              	.LVL23:
 365:Src/main.c    ****   {
 505              		.loc 1 365 6 view .LVU127
 506 004e 38B9     		cbnz	r0, .L24
 369:Src/main.c    ****   {
 507              		.loc 1 369 3 is_stmt 1 view .LVU128
 369:Src/main.c    ****   {
 508              		.loc 1 369 7 is_stmt 0 view .LVU129
 509 0050 1021     		movs	r1, #16
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 24


 510 0052 0648     		ldr	r0, .L26+4
 511 0054 FFF7FEFF 		bl	HAL_DMA_ConfigChannelAttributes
 512              	.LVL24:
 369:Src/main.c    ****   {
 513              		.loc 1 369 6 view .LVU130
 514 0058 20B9     		cbnz	r0, .L25
 377:Src/main.c    **** 
 515              		.loc 1 377 1 view .LVU131
 516 005a 03B0     		add	sp, sp, #12
 517              		.cfi_remember_state
 518              		.cfi_def_cfa_offset 4
 519              		@ sp needed
 520 005c 5DF804FB 		ldr	pc, [sp], #4
 521              	.L24:
 522              		.cfi_restore_state
 367:Src/main.c    ****   }
 523              		.loc 1 367 5 is_stmt 1 view .LVU132
 524 0060 FFF7FEFF 		bl	Error_Handler
 525              	.LVL25:
 526              	.L25:
 371:Src/main.c    ****   }
 527              		.loc 1 371 5 view .LVU133
 528 0064 FFF7FEFF 		bl	Error_Handler
 529              	.LVL26:
 530              	.L27:
 531              		.align	2
 532              	.L26:
 533 0068 000C0246 		.word	1174539264
 534 006c 00000000 		.word	handle_GPDMA1_Channel10
 535 0070 50050240 		.word	1073874256
 536              		.cfi_endproc
 537              	.LFE344:
 539              		.section	.text.MX_ICACHE_Init,"ax",%progbits
 540              		.align	1
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	MX_ICACHE_Init:
 546              	.LFB345:
 385:Src/main.c    **** 
 547              		.loc 1 385 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551 0000 08B5     		push	{r3, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 3, -8
 554              		.cfi_offset 14, -4
 397:Src/main.c    ****   {
 555              		.loc 1 397 3 view .LVU135
 397:Src/main.c    ****   {
 556              		.loc 1 397 7 is_stmt 0 view .LVU136
 557 0002 0020     		movs	r0, #0
 558 0004 FFF7FEFF 		bl	HAL_ICACHE_ConfigAssociativityMode
 559              	.LVL27:
 397:Src/main.c    ****   {
 560              		.loc 1 397 6 view .LVU137
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 25


 561 0008 18B9     		cbnz	r0, .L32
 401:Src/main.c    ****   {
 562              		.loc 1 401 3 is_stmt 1 view .LVU138
 401:Src/main.c    ****   {
 563              		.loc 1 401 7 is_stmt 0 view .LVU139
 564 000a FFF7FEFF 		bl	HAL_ICACHE_Enable
 565              	.LVL28:
 401:Src/main.c    ****   {
 566              		.loc 1 401 6 view .LVU140
 567 000e 10B9     		cbnz	r0, .L33
 409:Src/main.c    **** 
 568              		.loc 1 409 1 view .LVU141
 569 0010 08BD     		pop	{r3, pc}
 570              	.L32:
 399:Src/main.c    ****   }
 571              		.loc 1 399 5 is_stmt 1 view .LVU142
 572 0012 FFF7FEFF 		bl	Error_Handler
 573              	.LVL29:
 574              	.L33:
 403:Src/main.c    ****   }
 575              		.loc 1 403 5 view .LVU143
 576 0016 FFF7FEFF 		bl	Error_Handler
 577              	.LVL30:
 578              		.cfi_endproc
 579              	.LFE345:
 581              		.section	.text.MX_ADC1_Init,"ax",%progbits
 582              		.align	1
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 587              	MX_ADC1_Init:
 588              	.LFB343:
 235:Src/main.c    **** 
 589              		.loc 1 235 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 32
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 00B5     		push	{lr}
 594              		.cfi_def_cfa_offset 4
 595              		.cfi_offset 14, -4
 596 0002 89B0     		sub	sp, sp, #36
 597              		.cfi_def_cfa_offset 40
 241:Src/main.c    **** 
 598              		.loc 1 241 3 view .LVU145
 241:Src/main.c    **** 
 599              		.loc 1 241 26 is_stmt 0 view .LVU146
 600 0004 2022     		movs	r2, #32
 601 0006 0021     		movs	r1, #0
 602 0008 6846     		mov	r0, sp
 603 000a FFF7FEFF 		bl	memset
 604              	.LVL31:
 249:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 605              		.loc 1 249 3 is_stmt 1 view .LVU147
 249:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 606              		.loc 1 249 18 is_stmt 0 view .LVU148
 607 000e 3D48     		ldr	r0, .L50
 608 0010 3D4B     		ldr	r3, .L50+4
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 26


 609 0012 0360     		str	r3, [r0]
 250:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_14B;
 610              		.loc 1 250 3 is_stmt 1 view .LVU149
 250:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_14B;
 611              		.loc 1 250 29 is_stmt 0 view .LVU150
 612 0014 0023     		movs	r3, #0
 613 0016 4360     		str	r3, [r0, #4]
 251:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 614              		.loc 1 251 3 is_stmt 1 view .LVU151
 251:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 615              		.loc 1 251 25 is_stmt 0 view .LVU152
 616 0018 8360     		str	r3, [r0, #8]
 252:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 617              		.loc 1 252 3 is_stmt 1 view .LVU153
 252:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 618              		.loc 1 252 31 is_stmt 0 view .LVU154
 619 001a C360     		str	r3, [r0, #12]
 253:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 620              		.loc 1 253 3 is_stmt 1 view .LVU155
 253:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 621              		.loc 1 253 27 is_stmt 0 view .LVU156
 622 001c 0122     		movs	r2, #1
 623 001e 0261     		str	r2, [r0, #16]
 254:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 624              		.loc 1 254 3 is_stmt 1 view .LVU157
 254:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 625              		.loc 1 254 27 is_stmt 0 view .LVU158
 626 0020 0821     		movs	r1, #8
 627 0022 8161     		str	r1, [r0, #24]
 255:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 628              		.loc 1 255 3 is_stmt 1 view .LVU159
 255:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 629              		.loc 1 255 31 is_stmt 0 view .LVU160
 630 0024 0377     		strb	r3, [r0, #28]
 256:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 631              		.loc 1 256 3 is_stmt 1 view .LVU161
 256:Src/main.c    ****   hadc1.Init.NbrOfConversion = 6;
 632              		.loc 1 256 33 is_stmt 0 view .LVU162
 633 0026 80F82420 		strb	r2, [r0, #36]
 257:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 634              		.loc 1 257 3 is_stmt 1 view .LVU163
 257:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 635              		.loc 1 257 30 is_stmt 0 view .LVU164
 636 002a 0622     		movs	r2, #6
 637 002c 8262     		str	r2, [r0, #40]
 258:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 638              		.loc 1 258 3 is_stmt 1 view .LVU165
 258:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 639              		.loc 1 258 36 is_stmt 0 view .LVU166
 640 002e 80F82C30 		strb	r3, [r0, #44]
 259:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 641              		.loc 1 259 3 is_stmt 1 view .LVU167
 259:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 642              		.loc 1 259 31 is_stmt 0 view .LVU168
 643 0032 4363     		str	r3, [r0, #52]
 260:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 644              		.loc 1 260 3 is_stmt 1 view .LVU169
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 27


 260:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 645              		.loc 1 260 35 is_stmt 0 view .LVU170
 646 0034 8363     		str	r3, [r0, #56]
 261:Src/main.c    ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 647              		.loc 1 261 3 is_stmt 1 view .LVU171
 261:Src/main.c    ****   hadc1.Init.TriggerFrequencyMode = ADC_TRIGGER_FREQ_HIGH;
 648              		.loc 1 261 36 is_stmt 0 view .LVU172
 649 0036 80F84030 		strb	r3, [r0, #64]
 262:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 650              		.loc 1 262 3 is_stmt 1 view .LVU173
 262:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 651              		.loc 1 262 35 is_stmt 0 view .LVU174
 652 003a 8366     		str	r3, [r0, #104]
 263:Src/main.c    ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 653              		.loc 1 263 3 is_stmt 1 view .LVU175
 263:Src/main.c    ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 654              		.loc 1 263 22 is_stmt 0 view .LVU176
 655 003c 4FF48052 		mov	r2, #4096
 656 0040 4264     		str	r2, [r0, #68]
 264:Src/main.c    ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DMA_CIRCULAR;
 657              		.loc 1 264 3 is_stmt 1 view .LVU177
 264:Src/main.c    ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DMA_CIRCULAR;
 658              		.loc 1 264 27 is_stmt 0 view .LVU178
 659 0042 0365     		str	r3, [r0, #80]
 265:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 660              		.loc 1 265 3 is_stmt 1 view .LVU179
 265:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 661              		.loc 1 265 39 is_stmt 0 view .LVU180
 662 0044 0322     		movs	r2, #3
 663 0046 C263     		str	r2, [r0, #60]
 266:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 664              		.loc 1 266 3 is_stmt 1 view .LVU181
 266:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 665              		.loc 1 266 31 is_stmt 0 view .LVU182
 666 0048 80F85430 		strb	r3, [r0, #84]
 267:Src/main.c    ****   {
 667              		.loc 1 267 3 is_stmt 1 view .LVU183
 267:Src/main.c    ****   {
 668              		.loc 1 267 7 is_stmt 0 view .LVU184
 669 004c FFF7FEFF 		bl	HAL_ADC_Init
 670              	.LVL32:
 267:Src/main.c    ****   {
 671              		.loc 1 267 6 view .LVU185
 672 0050 0028     		cmp	r0, #0
 673 0052 48D1     		bne	.L43
 274:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 674              		.loc 1 274 3 is_stmt 1 view .LVU186
 274:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 675              		.loc 1 274 19 is_stmt 0 view .LVU187
 676 0054 2D4B     		ldr	r3, .L50+8
 677 0056 0093     		str	r3, [sp]
 275:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_5CYCLE;
 678              		.loc 1 275 3 is_stmt 1 view .LVU188
 275:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_5CYCLE;
 679              		.loc 1 275 16 is_stmt 0 view .LVU189
 680 0058 0623     		movs	r3, #6
 681 005a 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 28


 276:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 682              		.loc 1 276 3 is_stmt 1 view .LVU190
 276:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 683              		.loc 1 276 24 is_stmt 0 view .LVU191
 684 005c 0023     		movs	r3, #0
 685 005e 0293     		str	r3, [sp, #8]
 277:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 686              		.loc 1 277 3 is_stmt 1 view .LVU192
 277:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 687              		.loc 1 277 22 is_stmt 0 view .LVU193
 688 0060 4FF6FF72 		movw	r2, #65535
 689 0064 0392     		str	r2, [sp, #12]
 278:Src/main.c    ****   sConfig.Offset = 0;
 690              		.loc 1 278 3 is_stmt 1 view .LVU194
 278:Src/main.c    ****   sConfig.Offset = 0;
 691              		.loc 1 278 24 is_stmt 0 view .LVU195
 692 0066 0422     		movs	r2, #4
 693 0068 0492     		str	r2, [sp, #16]
 279:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 694              		.loc 1 279 3 is_stmt 1 view .LVU196
 279:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 695              		.loc 1 279 18 is_stmt 0 view .LVU197
 696 006a 0593     		str	r3, [sp, #20]
 280:Src/main.c    ****   {
 697              		.loc 1 280 3 is_stmt 1 view .LVU198
 280:Src/main.c    ****   {
 698              		.loc 1 280 7 is_stmt 0 view .LVU199
 699 006c 6946     		mov	r1, sp
 700 006e 2548     		ldr	r0, .L50
 701 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 702              	.LVL33:
 280:Src/main.c    ****   {
 703              		.loc 1 280 6 view .LVU200
 704 0074 0028     		cmp	r0, #0
 705 0076 38D1     		bne	.L44
 287:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 706              		.loc 1 287 3 is_stmt 1 view .LVU201
 287:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 707              		.loc 1 287 19 is_stmt 0 view .LVU202
 708 0078 254B     		ldr	r3, .L50+12
 709 007a 0093     		str	r3, [sp]
 288:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 710              		.loc 1 288 3 is_stmt 1 view .LVU203
 288:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 711              		.loc 1 288 16 is_stmt 0 view .LVU204
 712 007c 0C23     		movs	r3, #12
 713 007e 0193     		str	r3, [sp, #4]
 289:Src/main.c    ****   {
 714              		.loc 1 289 3 is_stmt 1 view .LVU205
 289:Src/main.c    ****   {
 715              		.loc 1 289 7 is_stmt 0 view .LVU206
 716 0080 6946     		mov	r1, sp
 717 0082 2048     		ldr	r0, .L50
 718 0084 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 719              	.LVL34:
 289:Src/main.c    ****   {
 720              		.loc 1 289 6 view .LVU207
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 29


 721 0088 0028     		cmp	r0, #0
 722 008a 30D1     		bne	.L45
 296:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 723              		.loc 1 296 3 is_stmt 1 view .LVU208
 296:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_3;
 724              		.loc 1 296 19 is_stmt 0 view .LVU209
 725 008c 214B     		ldr	r3, .L50+16
 726 008e 0093     		str	r3, [sp]
 297:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 727              		.loc 1 297 3 is_stmt 1 view .LVU210
 297:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 728              		.loc 1 297 16 is_stmt 0 view .LVU211
 729 0090 1223     		movs	r3, #18
 730 0092 0193     		str	r3, [sp, #4]
 298:Src/main.c    ****   {
 731              		.loc 1 298 3 is_stmt 1 view .LVU212
 298:Src/main.c    ****   {
 732              		.loc 1 298 7 is_stmt 0 view .LVU213
 733 0094 6946     		mov	r1, sp
 734 0096 1B48     		ldr	r0, .L50
 735 0098 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 736              	.LVL35:
 298:Src/main.c    ****   {
 737              		.loc 1 298 6 view .LVU214
 738 009c 48BB     		cbnz	r0, .L46
 305:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 739              		.loc 1 305 3 is_stmt 1 view .LVU215
 305:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_4;
 740              		.loc 1 305 19 is_stmt 0 view .LVU216
 741 009e 1E4B     		ldr	r3, .L50+20
 742 00a0 0093     		str	r3, [sp]
 306:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 743              		.loc 1 306 3 is_stmt 1 view .LVU217
 306:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 744              		.loc 1 306 16 is_stmt 0 view .LVU218
 745 00a2 1823     		movs	r3, #24
 746 00a4 0193     		str	r3, [sp, #4]
 307:Src/main.c    ****   {
 747              		.loc 1 307 3 is_stmt 1 view .LVU219
 307:Src/main.c    ****   {
 748              		.loc 1 307 7 is_stmt 0 view .LVU220
 749 00a6 6946     		mov	r1, sp
 750 00a8 1648     		ldr	r0, .L50
 751 00aa FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 752              	.LVL36:
 307:Src/main.c    ****   {
 753              		.loc 1 307 6 view .LVU221
 754 00ae 10BB     		cbnz	r0, .L47
 314:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 755              		.loc 1 314 3 is_stmt 1 view .LVU222
 314:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_5;
 756              		.loc 1 314 19 is_stmt 0 view .LVU223
 757 00b0 1A4B     		ldr	r3, .L50+24
 758 00b2 0093     		str	r3, [sp]
 315:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES;
 759              		.loc 1 315 3 is_stmt 1 view .LVU224
 315:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_12CYCLES;
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 30


 760              		.loc 1 315 16 is_stmt 0 view .LVU225
 761 00b4 4FF48073 		mov	r3, #256
 762 00b8 0193     		str	r3, [sp, #4]
 316:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 763              		.loc 1 316 3 is_stmt 1 view .LVU226
 316:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 764              		.loc 1 316 24 is_stmt 0 view .LVU227
 765 00ba 0223     		movs	r3, #2
 766 00bc 0293     		str	r3, [sp, #8]
 317:Src/main.c    ****   {
 767              		.loc 1 317 3 is_stmt 1 view .LVU228
 317:Src/main.c    ****   {
 768              		.loc 1 317 7 is_stmt 0 view .LVU229
 769 00be 6946     		mov	r1, sp
 770 00c0 1048     		ldr	r0, .L50
 771 00c2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 772              	.LVL37:
 317:Src/main.c    ****   {
 773              		.loc 1 317 6 view .LVU230
 774 00c6 C0B9     		cbnz	r0, .L48
 324:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 775              		.loc 1 324 3 is_stmt 1 view .LVU231
 324:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_6;
 776              		.loc 1 324 19 is_stmt 0 view .LVU232
 777 00c8 154B     		ldr	r3, .L50+28
 778 00ca 0093     		str	r3, [sp]
 325:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_5CYCLE;
 779              		.loc 1 325 3 is_stmt 1 view .LVU233
 325:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_5CYCLE;
 780              		.loc 1 325 16 is_stmt 0 view .LVU234
 781 00cc 4FF48373 		mov	r3, #262
 782 00d0 0193     		str	r3, [sp, #4]
 326:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 783              		.loc 1 326 3 is_stmt 1 view .LVU235
 326:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 784              		.loc 1 326 24 is_stmt 0 view .LVU236
 785 00d2 0023     		movs	r3, #0
 786 00d4 0293     		str	r3, [sp, #8]
 327:Src/main.c    ****   {
 787              		.loc 1 327 3 is_stmt 1 view .LVU237
 327:Src/main.c    ****   {
 788              		.loc 1 327 7 is_stmt 0 view .LVU238
 789 00d6 6946     		mov	r1, sp
 790 00d8 0A48     		ldr	r0, .L50
 791 00da FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 792              	.LVL38:
 327:Src/main.c    ****   {
 793              		.loc 1 327 6 view .LVU239
 794 00de 70B9     		cbnz	r0, .L49
 335:Src/main.c    **** 
 795              		.loc 1 335 1 view .LVU240
 796 00e0 09B0     		add	sp, sp, #36
 797              		.cfi_remember_state
 798              		.cfi_def_cfa_offset 4
 799              		@ sp needed
 800 00e2 5DF804FB 		ldr	pc, [sp], #4
 801              	.L43:
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 31


 802              		.cfi_restore_state
 269:Src/main.c    ****   }
 803              		.loc 1 269 5 is_stmt 1 view .LVU241
 804 00e6 FFF7FEFF 		bl	Error_Handler
 805              	.LVL39:
 806              	.L44:
 282:Src/main.c    ****   }
 807              		.loc 1 282 5 view .LVU242
 808 00ea FFF7FEFF 		bl	Error_Handler
 809              	.LVL40:
 810              	.L45:
 291:Src/main.c    ****   }
 811              		.loc 1 291 5 view .LVU243
 812 00ee FFF7FEFF 		bl	Error_Handler
 813              	.LVL41:
 814              	.L46:
 300:Src/main.c    ****   }
 815              		.loc 1 300 5 view .LVU244
 816 00f2 FFF7FEFF 		bl	Error_Handler
 817              	.LVL42:
 818              	.L47:
 309:Src/main.c    ****   }
 819              		.loc 1 309 5 view .LVU245
 820 00f6 FFF7FEFF 		bl	Error_Handler
 821              	.LVL43:
 822              	.L48:
 319:Src/main.c    ****   }
 823              		.loc 1 319 5 view .LVU246
 824 00fa FFF7FEFF 		bl	Error_Handler
 825              	.LVL44:
 826              	.L49:
 329:Src/main.c    ****   }
 827              		.loc 1 329 5 view .LVU247
 828 00fe FFF7FEFF 		bl	Error_Handler
 829              	.LVL45:
 830              	.L51:
 831 0102 00BF     		.align	2
 832              	.L50:
 833 0104 00000000 		.word	hadc1
 834 0108 00800242 		.word	1107460096
 835 010c 00010020 		.word	536871168
 836 0110 8000001C 		.word	469762176
 837 0114 10000010 		.word	268435472
 838 0118 0080003E 		.word	1040220160
 839 011c 04000008 		.word	134217732
 840 0120 02000004 		.word	67108866
 841              		.cfi_endproc
 842              	.LFE343:
 844              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 845              		.align	1
 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 850              	MX_USART1_UART_Init:
 851              	.LFB346:
 417:Src/main.c    **** 
 852              		.loc 1 417 1 view -0
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 32


 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856 0000 08B5     		push	{r3, lr}
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 3, -8
 859              		.cfi_offset 14, -4
 426:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 860              		.loc 1 426 3 view .LVU249
 426:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 861              		.loc 1 426 19 is_stmt 0 view .LVU250
 862 0002 1548     		ldr	r0, .L62
 863 0004 154B     		ldr	r3, .L62+4
 864 0006 0360     		str	r3, [r0]
 427:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 865              		.loc 1 427 3 is_stmt 1 view .LVU251
 427:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 866              		.loc 1 427 24 is_stmt 0 view .LVU252
 867 0008 4FF4E133 		mov	r3, #115200
 868 000c 4360     		str	r3, [r0, #4]
 428:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 869              		.loc 1 428 3 is_stmt 1 view .LVU253
 428:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 870              		.loc 1 428 26 is_stmt 0 view .LVU254
 871 000e 0023     		movs	r3, #0
 872 0010 8360     		str	r3, [r0, #8]
 429:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 873              		.loc 1 429 3 is_stmt 1 view .LVU255
 429:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 874              		.loc 1 429 24 is_stmt 0 view .LVU256
 875 0012 C360     		str	r3, [r0, #12]
 430:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 876              		.loc 1 430 3 is_stmt 1 view .LVU257
 430:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 877              		.loc 1 430 22 is_stmt 0 view .LVU258
 878 0014 0361     		str	r3, [r0, #16]
 431:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 879              		.loc 1 431 3 is_stmt 1 view .LVU259
 431:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 880              		.loc 1 431 20 is_stmt 0 view .LVU260
 881 0016 0C22     		movs	r2, #12
 882 0018 4261     		str	r2, [r0, #20]
 432:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 883              		.loc 1 432 3 is_stmt 1 view .LVU261
 432:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 884              		.loc 1 432 25 is_stmt 0 view .LVU262
 885 001a 8361     		str	r3, [r0, #24]
 433:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 886              		.loc 1 433 3 is_stmt 1 view .LVU263
 433:Src/main.c    ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 887              		.loc 1 433 28 is_stmt 0 view .LVU264
 888 001c C361     		str	r3, [r0, #28]
 434:Src/main.c    ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 889              		.loc 1 434 3 is_stmt 1 view .LVU265
 434:Src/main.c    ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 890              		.loc 1 434 30 is_stmt 0 view .LVU266
 891 001e 0362     		str	r3, [r0, #32]
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 33


 435:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 892              		.loc 1 435 3 is_stmt 1 view .LVU267
 435:Src/main.c    ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 893              		.loc 1 435 30 is_stmt 0 view .LVU268
 894 0020 4362     		str	r3, [r0, #36]
 436:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 895              		.loc 1 436 3 is_stmt 1 view .LVU269
 436:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 896              		.loc 1 436 38 is_stmt 0 view .LVU270
 897 0022 8362     		str	r3, [r0, #40]
 437:Src/main.c    ****   {
 898              		.loc 1 437 3 is_stmt 1 view .LVU271
 437:Src/main.c    ****   {
 899              		.loc 1 437 7 is_stmt 0 view .LVU272
 900 0024 FFF7FEFF 		bl	HAL_UART_Init
 901              	.LVL46:
 437:Src/main.c    ****   {
 902              		.loc 1 437 6 view .LVU273
 903 0028 70B9     		cbnz	r0, .L58
 441:Src/main.c    ****   {
 904              		.loc 1 441 3 is_stmt 1 view .LVU274
 441:Src/main.c    ****   {
 905              		.loc 1 441 7 is_stmt 0 view .LVU275
 906 002a 0021     		movs	r1, #0
 907 002c 0A48     		ldr	r0, .L62
 908 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 909              	.LVL47:
 441:Src/main.c    ****   {
 910              		.loc 1 441 6 view .LVU276
 911 0032 58B9     		cbnz	r0, .L59
 445:Src/main.c    ****   {
 912              		.loc 1 445 3 is_stmt 1 view .LVU277
 445:Src/main.c    ****   {
 913              		.loc 1 445 7 is_stmt 0 view .LVU278
 914 0034 0021     		movs	r1, #0
 915 0036 0848     		ldr	r0, .L62
 916 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 917              	.LVL48:
 445:Src/main.c    ****   {
 918              		.loc 1 445 6 view .LVU279
 919 003c 40B9     		cbnz	r0, .L60
 449:Src/main.c    ****   {
 920              		.loc 1 449 3 is_stmt 1 view .LVU280
 449:Src/main.c    ****   {
 921              		.loc 1 449 7 is_stmt 0 view .LVU281
 922 003e 0648     		ldr	r0, .L62
 923 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 924              	.LVL49:
 449:Src/main.c    ****   {
 925              		.loc 1 449 6 view .LVU282
 926 0044 30B9     		cbnz	r0, .L61
 457:Src/main.c    **** 
 927              		.loc 1 457 1 view .LVU283
 928 0046 08BD     		pop	{r3, pc}
 929              	.L58:
 439:Src/main.c    ****   }
 930              		.loc 1 439 5 is_stmt 1 view .LVU284
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 34


 931 0048 FFF7FEFF 		bl	Error_Handler
 932              	.LVL50:
 933              	.L59:
 443:Src/main.c    ****   }
 934              		.loc 1 443 5 view .LVU285
 935 004c FFF7FEFF 		bl	Error_Handler
 936              	.LVL51:
 937              	.L60:
 447:Src/main.c    ****   }
 938              		.loc 1 447 5 view .LVU286
 939 0050 FFF7FEFF 		bl	Error_Handler
 940              	.LVL52:
 941              	.L61:
 451:Src/main.c    ****   }
 942              		.loc 1 451 5 view .LVU287
 943 0054 FFF7FEFF 		bl	Error_Handler
 944              	.LVL53:
 945              	.L63:
 946              		.align	2
 947              	.L62:
 948 0058 00000000 		.word	huart1
 949 005c 00380140 		.word	1073821696
 950              		.cfi_endproc
 951              	.LFE346:
 953              		.section	.text.SystemClock_Config,"ax",%progbits
 954              		.align	1
 955              		.global	SystemClock_Config
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 960              	SystemClock_Config:
 961              	.LFB341:
 154:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 962              		.loc 1 154 1 view -0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 120
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966 0000 00B5     		push	{lr}
 967              		.cfi_def_cfa_offset 4
 968              		.cfi_offset 14, -4
 969 0002 9FB0     		sub	sp, sp, #124
 970              		.cfi_def_cfa_offset 128
 155:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 971              		.loc 1 155 3 view .LVU289
 155:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 972              		.loc 1 155 22 is_stmt 0 view .LVU290
 973 0004 6022     		movs	r2, #96
 974 0006 0021     		movs	r1, #0
 975 0008 06A8     		add	r0, sp, #24
 976 000a FFF7FEFF 		bl	memset
 977              	.LVL54:
 156:Src/main.c    **** 
 978              		.loc 1 156 3 is_stmt 1 view .LVU291
 156:Src/main.c    **** 
 979              		.loc 1 156 22 is_stmt 0 view .LVU292
 980 000e 0023     		movs	r3, #0
 981 0010 0093     		str	r3, [sp]
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 35


 982 0012 0193     		str	r3, [sp, #4]
 983 0014 0293     		str	r3, [sp, #8]
 984 0016 0393     		str	r3, [sp, #12]
 985 0018 0493     		str	r3, [sp, #16]
 986 001a 0593     		str	r3, [sp, #20]
 160:Src/main.c    ****   {
 987              		.loc 1 160 3 is_stmt 1 view .LVU293
 160:Src/main.c    ****   {
 988              		.loc 1 160 7 is_stmt 0 view .LVU294
 989 001c 4FF44030 		mov	r0, #196608
 990 0020 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 991              	.LVL55:
 160:Src/main.c    ****   {
 992              		.loc 1 160 6 view .LVU295
 993 0024 0028     		cmp	r0, #0
 994 0026 2ED1     		bne	.L69
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 995              		.loc 1 167 3 is_stmt 1 view .LVU296
 167:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 996              		.loc 1 167 36 is_stmt 0 view .LVU297
 997 0028 1223     		movs	r3, #18
 998 002a 0693     		str	r3, [sp, #24]
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 999              		.loc 1 168 3 is_stmt 1 view .LVU298
 168:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1000              		.loc 1 168 30 is_stmt 0 view .LVU299
 1001 002c 4FF48073 		mov	r3, #256
 1002 0030 0993     		str	r3, [sp, #36]
 169:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1003              		.loc 1 169 3 is_stmt 1 view .LVU300
 169:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 1004              		.loc 1 169 41 is_stmt 0 view .LVU301
 1005 0032 1023     		movs	r3, #16
 1006 0034 0A93     		str	r3, [sp, #40]
 170:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 1007              		.loc 1 170 3 is_stmt 1 view .LVU302
 170:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 1008              		.loc 1 170 30 is_stmt 0 view .LVU303
 1009 0036 0121     		movs	r1, #1
 1010 0038 0D91     		str	r1, [sp, #52]
 171:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 1011              		.loc 1 171 3 is_stmt 1 view .LVU304
 171:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_4;
 1012              		.loc 1 171 41 is_stmt 0 view .LVU305
 1013 003a 0E93     		str	r3, [sp, #56]
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1014              		.loc 1 172 3 is_stmt 1 view .LVU306
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1015              		.loc 1 172 35 is_stmt 0 view .LVU307
 1016 003c 4FF08043 		mov	r3, #1073741824
 1017 0040 0F93     		str	r3, [sp, #60]
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 1018              		.loc 1 173 3 is_stmt 1 view .LVU308
 173:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 1019              		.loc 1 173 34 is_stmt 0 view .LVU309
 1020 0042 0223     		movs	r3, #2
 1021 0044 1493     		str	r3, [sp, #80]
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 36


 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 1022              		.loc 1 174 3 is_stmt 1 view .LVU310
 174:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMBOOST = RCC_PLLMBOOST_DIV1;
 1023              		.loc 1 174 35 is_stmt 0 view .LVU311
 1024 0046 1591     		str	r1, [sp, #84]
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 1025              		.loc 1 175 3 is_stmt 1 view .LVU312
 175:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 1026              		.loc 1 175 35 is_stmt 0 view .LVU313
 1027 0048 0022     		movs	r2, #0
 1028 004a 1792     		str	r2, [sp, #92]
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 80;
 1029              		.loc 1 176 3 is_stmt 1 view .LVU314
 176:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 80;
 1030              		.loc 1 176 30 is_stmt 0 view .LVU315
 1031 004c 1691     		str	r1, [sp, #88]
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 2;
 1032              		.loc 1 177 3 is_stmt 1 view .LVU316
 177:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = 2;
 1033              		.loc 1 177 30 is_stmt 0 view .LVU317
 1034 004e 5021     		movs	r1, #80
 1035 0050 1891     		str	r1, [sp, #96]
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1036              		.loc 1 178 3 is_stmt 1 view .LVU318
 178:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1037              		.loc 1 178 30 is_stmt 0 view .LVU319
 1038 0052 1993     		str	r3, [sp, #100]
 179:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1039              		.loc 1 179 3 is_stmt 1 view .LVU320
 179:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1040              		.loc 1 179 30 is_stmt 0 view .LVU321
 1041 0054 1A93     		str	r3, [sp, #104]
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLLVCIRANGE_0;
 1042              		.loc 1 180 3 is_stmt 1 view .LVU322
 180:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLLVCIRANGE_0;
 1043              		.loc 1 180 30 is_stmt 0 view .LVU323
 1044 0056 1B93     		str	r3, [sp, #108]
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 1045              		.loc 1 181 3 is_stmt 1 view .LVU324
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 1046              		.loc 1 181 32 is_stmt 0 view .LVU325
 1047 0058 1C92     		str	r2, [sp, #112]
 182:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1048              		.loc 1 182 3 is_stmt 1 view .LVU326
 182:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1049              		.loc 1 182 34 is_stmt 0 view .LVU327
 1050 005a 1D92     		str	r2, [sp, #116]
 183:Src/main.c    ****   {
 1051              		.loc 1 183 3 is_stmt 1 view .LVU328
 183:Src/main.c    ****   {
 1052              		.loc 1 183 7 is_stmt 0 view .LVU329
 1053 005c 06A8     		add	r0, sp, #24
 1054 005e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1055              	.LVL56:
 183:Src/main.c    ****   {
 1056              		.loc 1 183 6 view .LVU330
 1057 0062 90B9     		cbnz	r0, .L70
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 37


 190:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 1058              		.loc 1 190 3 is_stmt 1 view .LVU331
 190:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 1059              		.loc 1 190 31 is_stmt 0 view .LVU332
 1060 0064 1F23     		movs	r3, #31
 1061 0066 0093     		str	r3, [sp]
 193:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1062              		.loc 1 193 3 is_stmt 1 view .LVU333
 193:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1063              		.loc 1 193 34 is_stmt 0 view .LVU334
 1064 0068 0323     		movs	r3, #3
 1065 006a 0193     		str	r3, [sp, #4]
 194:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1066              		.loc 1 194 3 is_stmt 1 view .LVU335
 194:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1067              		.loc 1 194 35 is_stmt 0 view .LVU336
 1068 006c 0023     		movs	r3, #0
 1069 006e 0293     		str	r3, [sp, #8]
 195:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1070              		.loc 1 195 3 is_stmt 1 view .LVU337
 195:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1071              		.loc 1 195 36 is_stmt 0 view .LVU338
 1072 0070 0393     		str	r3, [sp, #12]
 196:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 1073              		.loc 1 196 3 is_stmt 1 view .LVU339
 196:Src/main.c    ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_HCLK_DIV1;
 1074              		.loc 1 196 36 is_stmt 0 view .LVU340
 1075 0072 0493     		str	r3, [sp, #16]
 197:Src/main.c    **** 
 1076              		.loc 1 197 3 is_stmt 1 view .LVU341
 197:Src/main.c    **** 
 1077              		.loc 1 197 36 is_stmt 0 view .LVU342
 1078 0074 0593     		str	r3, [sp, #20]
 199:Src/main.c    ****   {
 1079              		.loc 1 199 3 is_stmt 1 view .LVU343
 199:Src/main.c    ****   {
 1080              		.loc 1 199 7 is_stmt 0 view .LVU344
 1081 0076 0421     		movs	r1, #4
 1082 0078 6846     		mov	r0, sp
 1083 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1084              	.LVL57:
 199:Src/main.c    ****   {
 1085              		.loc 1 199 6 view .LVU345
 1086 007e 30B9     		cbnz	r0, .L71
 203:Src/main.c    **** 
 1087              		.loc 1 203 1 view .LVU346
 1088 0080 1FB0     		add	sp, sp, #124
 1089              		.cfi_remember_state
 1090              		.cfi_def_cfa_offset 4
 1091              		@ sp needed
 1092 0082 5DF804FB 		ldr	pc, [sp], #4
 1093              	.L69:
 1094              		.cfi_restore_state
 162:Src/main.c    ****   }
 1095              		.loc 1 162 5 is_stmt 1 view .LVU347
 1096 0086 FFF7FEFF 		bl	Error_Handler
 1097              	.LVL58:
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 38


 1098              	.L70:
 185:Src/main.c    ****   }
 1099              		.loc 1 185 5 view .LVU348
 1100 008a FFF7FEFF 		bl	Error_Handler
 1101              	.LVL59:
 1102              	.L71:
 201:Src/main.c    ****   }
 1103              		.loc 1 201 5 view .LVU349
 1104 008e FFF7FEFF 		bl	Error_Handler
 1105              	.LVL60:
 1106              		.cfi_endproc
 1107              	.LFE341:
 1109              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1110              		.align	2
 1111              	.LC2:
 1112 0000 4368616E 		.ascii	"Channel %d raw: %d\000"
 1112      6E656C20 
 1112      25642072 
 1112      61773A20 
 1112      256400
 1113              		.section	.text.main,"ax",%progbits
 1114              		.align	1
 1115              		.global	main
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1120              	main:
 1121              	.LFB340:
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1122              		.loc 1 76 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 64
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
 1126 0000 10B5     		push	{r4, lr}
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 4, -8
 1129              		.cfi_offset 14, -4
 1130 0002 90B0     		sub	sp, sp, #64
 1131              		.cfi_def_cfa_offset 72
  89:Src/main.c    **** 
 1132              		.loc 1 89 3 view .LVU351
 1133 0004 FFF7FEFF 		bl	HAL_Init
 1134              	.LVL61:
  96:Src/main.c    **** 
 1135              		.loc 1 96 3 view .LVU352
 1136 0008 FFF7FEFF 		bl	SystemClock_Config
 1137              	.LVL62:
  99:Src/main.c    **** 
 1138              		.loc 1 99 3 view .LVU353
 1139 000c FFF7FEFF 		bl	SystemPower_Config
 1140              	.LVL63:
 106:Src/main.c    ****   MX_GPDMA1_Init();
 1141              		.loc 1 106 3 view .LVU354
 1142 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1143              	.LVL64:
 107:Src/main.c    ****   MX_ICACHE_Init();
 1144              		.loc 1 107 3 view .LVU355
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 39


 1145 0014 FFF7FEFF 		bl	MX_GPDMA1_Init
 1146              	.LVL65:
 108:Src/main.c    ****   MX_ADC1_Init();
 1147              		.loc 1 108 3 view .LVU356
 1148 0018 FFF7FEFF 		bl	MX_ICACHE_Init
 1149              	.LVL66:
 109:Src/main.c    ****   MX_USART1_UART_Init();
 1150              		.loc 1 109 3 view .LVU357
 1151 001c FFF7FEFF 		bl	MX_ADC1_Init
 1152              	.LVL67:
 110:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1153              		.loc 1 110 3 view .LVU358
 1154 0020 FFF7FEFF 		bl	MX_USART1_UART_Init
 1155              	.LVL68:
 112:Src/main.c    ****   __HAL_LINKDMA(&hadc1, DMA_Handle, handle_GPDMA1_Channel10);
 1156              		.loc 1 112 3 view .LVU359
 1157 0024 FFF7FEFF 		bl	MX_ADCQueue_Config
 1158              	.LVL69:
 113:Src/main.c    ****   if (HAL_DMAEx_List_LinkQ(&handle_GPDMA1_Channel10, &ADCQueue) != HAL_OK)
 1159              		.loc 1 113 3 view .LVU360
 113:Src/main.c    ****   if (HAL_DMAEx_List_LinkQ(&handle_GPDMA1_Channel10, &ADCQueue) != HAL_OK)
 1160              		.loc 1 113 3 view .LVU361
 1161 0028 164B     		ldr	r3, .L79
 1162 002a 1748     		ldr	r0, .L79+4
 1163 002c 1867     		str	r0, [r3, #112]
 113:Src/main.c    ****   if (HAL_DMAEx_List_LinkQ(&handle_GPDMA1_Channel10, &ADCQueue) != HAL_OK)
 1164              		.loc 1 113 3 view .LVU362
 1165 002e C365     		str	r3, [r0, #92]
 113:Src/main.c    ****   if (HAL_DMAEx_List_LinkQ(&handle_GPDMA1_Channel10, &ADCQueue) != HAL_OK)
 1166              		.loc 1 113 3 view .LVU363
 114:Src/main.c    ****   {
 1167              		.loc 1 114 3 view .LVU364
 114:Src/main.c    ****   {
 1168              		.loc 1 114 7 is_stmt 0 view .LVU365
 1169 0030 1649     		ldr	r1, .L79+8
 1170 0032 FFF7FEFF 		bl	HAL_DMAEx_List_LinkQ
 1171              	.LVL70:
 114:Src/main.c    ****   {
 1172              		.loc 1 114 6 view .LVU366
 1173 0036 08B1     		cbz	r0, .L73
 116:Src/main.c    ****   }
 1174              		.loc 1 116 5 is_stmt 1 view .LVU367
 1175 0038 FFF7FEFF 		bl	Error_Handler
 1176              	.LVL71:
 1177              	.L73:
 118:Src/main.c    ****                         (uint32_t *)aADCxConvertedData,
 1178              		.loc 1 118 3 view .LVU368
 118:Src/main.c    ****                         (uint32_t *)aADCxConvertedData,
 1179              		.loc 1 118 7 is_stmt 0 view .LVU369
 1180 003c 0C22     		movs	r2, #12
 1181 003e 1449     		ldr	r1, .L79+12
 1182 0040 1048     		ldr	r0, .L79
 1183 0042 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1184              	.LVL72:
 118:Src/main.c    ****                         (uint32_t *)aADCxConvertedData,
 1185              		.loc 1 118 6 view .LVU370
 1186 0046 08B1     		cbz	r0, .L74
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 40


 122:Src/main.c    ****   }
 1187              		.loc 1 122 5 is_stmt 1 view .LVU371
 1188 0048 FFF7FEFF 		bl	Error_Handler
 1189              	.LVL73:
 1190              	.L74:
 129:Src/main.c    **** 
 1191              		.loc 1 129 3 view .LVU372
 1192 004c 0622     		movs	r2, #6
 1193 004e 1049     		ldr	r1, .L79+12
 1194 0050 0C48     		ldr	r0, .L79
 1195 0052 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1196              	.LVL74:
 1197 0056 12E0     		b	.L77
 1198              	.LVL75:
 1199              	.L76:
 1200              	.LBB14:
 1201              	.LBB15:
 135:Src/main.c    ****       HAL_Delay(1000);
 1202              		.loc 1 135 7 discriminator 3 view .LVU373
 1203 0058 2046     		mov	r0, r4
 1204 005a FFF7FEFF 		bl	setMux
 1205              	.LVL76:
 136:Src/main.c    ****       sprintf(str,"Channel %d raw: %d",i, aADCxConvertedData[i - 1]);
 1206              		.loc 1 136 7 discriminator 3 view .LVU374
 1207 005e 4FF47A70 		mov	r0, #1000
 1208 0062 FFF7FEFF 		bl	HAL_Delay
 1209              	.LVL77:
 137:Src/main.c    ****       // HAL_UART_Transmit(&huart1, str, sizeof(str), 1000);
 1210              		.loc 1 137 7 discriminator 3 view .LVU375
 137:Src/main.c    ****       // HAL_UART_Transmit(&huart1, str, sizeof(str), 1000);
 1211              		.loc 1 137 64 is_stmt 0 discriminator 3 view .LVU376
 1212 0066 621E     		subs	r2, r4, #1
 137:Src/main.c    ****       // HAL_UART_Transmit(&huart1, str, sizeof(str), 1000);
 1213              		.loc 1 137 7 discriminator 3 view .LVU377
 1214 0068 094B     		ldr	r3, .L79+12
 1215 006a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1216 006e 2246     		mov	r2, r4
 1217 0070 0849     		ldr	r1, .L79+16
 1218 0072 01A8     		add	r0, sp, #4
 1219 0074 FFF7FEFF 		bl	sprintf
 1220              	.LVL78:
 1221              	.LBE15:
 134:Src/main.c    ****       setMux(i);
 1222              		.loc 1 134 28 is_stmt 1 discriminator 3 view .LVU378
 1223 0078 0134     		adds	r4, r4, #1
 1224              	.LVL79:
 1225              	.L75:
 134:Src/main.c    ****       setMux(i);
 1226              		.loc 1 134 22 discriminator 1 view .LVU379
 1227 007a 062C     		cmp	r4, #6
 1228 007c ECDD     		ble	.L76
 1229              	.LVL80:
 1230              	.L77:
 134:Src/main.c    ****       setMux(i);
 1231              		.loc 1 134 22 is_stmt 0 discriminator 1 view .LVU380
 1232              	.LBE14:
 131:Src/main.c    ****   while (1)
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 41


 1233              		.loc 1 131 3 is_stmt 1 view .LVU381
 132:Src/main.c    ****   {
 1234              		.loc 1 132 3 view .LVU382
 134:Src/main.c    ****       setMux(i);
 1235              		.loc 1 134 5 view .LVU383
 1236              	.LBB16:
 134:Src/main.c    ****       setMux(i);
 1237              		.loc 1 134 10 view .LVU384
 134:Src/main.c    ****       setMux(i);
 1238              		.loc 1 134 14 is_stmt 0 view .LVU385
 1239 007e 0124     		movs	r4, #1
 134:Src/main.c    ****       setMux(i);
 1240              		.loc 1 134 5 view .LVU386
 1241 0080 FBE7     		b	.L75
 1242              	.L80:
 1243 0082 00BF     		.align	2
 1244              	.L79:
 1245 0084 00000000 		.word	hadc1
 1246 0088 00000000 		.word	handle_GPDMA1_Channel10
 1247 008c 00000000 		.word	ADCQueue
 1248 0090 00000000 		.word	aADCxConvertedData
 1249 0094 00000000 		.word	.LC2
 1250              	.LBE16:
 1251              		.cfi_endproc
 1252              	.LFE340:
 1254              		.global	aADCxConvertedData
 1255              		.section	.bss.aADCxConvertedData,"aw",%nobits
 1256              		.align	2
 1259              	aADCxConvertedData:
 1260 0000 00000000 		.space	48
 1260      00000000 
 1260      00000000 
 1260      00000000 
 1260      00000000 
 1261              		.global	huart1
 1262              		.section	.bss.huart1,"aw",%nobits
 1263              		.align	2
 1266              	huart1:
 1267 0000 00000000 		.space	148
 1267      00000000 
 1267      00000000 
 1267      00000000 
 1267      00000000 
 1268              		.global	handle_GPDMA1_Channel10
 1269              		.section	.bss.handle_GPDMA1_Channel10,"aw",%nobits
 1270              		.align	2
 1273              	handle_GPDMA1_Channel10:
 1274 0000 00000000 		.space	120
 1274      00000000 
 1274      00000000 
 1274      00000000 
 1274      00000000 
 1275              		.global	hadc1
 1276              		.section	.bss.hadc1,"aw",%nobits
 1277              		.align	2
 1280              	hadc1:
 1281 0000 00000000 		.space	140
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 42


 1281      00000000 
 1281      00000000 
 1281      00000000 
 1281      00000000 
 1282              		.text
 1283              	.Letext0:
 1284              		.file 3 "Drivers/CMSIS/Device/ST/STM32U5xx/Include/stm32u575xx.h"
 1285              		.file 4 "c:\\users\\soran\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1286              		.file 5 "c:\\users\\soran\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 1287              		.file 6 "Drivers/CMSIS/Device/ST/STM32U5xx/Include/stm32u5xx.h"
 1288              		.file 7 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_def.h"
 1289              		.file 8 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_rcc.h"
 1290              		.file 9 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_gpio.h"
 1291              		.file 10 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_dma.h"
 1292              		.file 11 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_dma_ex.h"
 1293              		.file 12 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_adc.h"
 1294              		.file 13 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_uart.h"
 1295              		.file 14 "Inc/main.h"
 1296              		.file 15 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_pwr_ex.h"
 1297              		.file 16 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_uart_ex.h"
 1298              		.file 17 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_icache.h"
 1299              		.file 18 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal_cortex.h"
 1300              		.file 19 "Drivers/STM32U5xx_HAL_Driver/Inc/stm32u5xx_hal.h"
 1301              		.file 20 "Inc/linked_list.h"
 1302              		.file 21 "<built-in>"
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:22     .text.MX_GPIO_Init:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:27     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:216    .text.MX_GPIO_Init:0000000000000100 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:225    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:231    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:245    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:251    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:265    .rodata.setMux.str1.4:0000000000000000 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:272    .text.setMux:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:278    .text.setMux:0000000000000000 setMux
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:350    .text.setMux:0000000000000050 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:359    .text.Error_Handler:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:365    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:397    .text.SystemPower_Config:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:402    .text.SystemPower_Config:0000000000000000 SystemPower_Config
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:435    .text.MX_GPDMA1_Init:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:440    .text.MX_GPDMA1_Init:0000000000000000 MX_GPDMA1_Init
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:533    .text.MX_GPDMA1_Init:0000000000000068 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1273   .bss.handle_GPDMA1_Channel10:0000000000000000 handle_GPDMA1_Channel10
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:540    .text.MX_ICACHE_Init:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:545    .text.MX_ICACHE_Init:0000000000000000 MX_ICACHE_Init
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:582    .text.MX_ADC1_Init:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:587    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:833    .text.MX_ADC1_Init:0000000000000104 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1280   .bss.hadc1:0000000000000000 hadc1
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:845    .text.MX_USART1_UART_Init:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:850    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:948    .text.MX_USART1_UART_Init:0000000000000058 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1266   .bss.huart1:0000000000000000 huart1
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:954    .text.SystemClock_Config:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:960    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1110   .rodata.main.str1.4:0000000000000000 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1114   .text.main:0000000000000000 $t
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1120   .text.main:0000000000000000 main
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1245   .text.main:0000000000000084 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1259   .bss.aADCxConvertedData:0000000000000000 aADCxConvertedData
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1256   .bss.aADCxConvertedData:0000000000000000 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1263   .bss.huart1:0000000000000000 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1270   .bss.handle_GPDMA1_Channel10:0000000000000000 $d
C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s:1277   .bss.hadc1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
printf
HAL_PWREx_EnableVddIO2
HAL_PWREx_DisableUCPDDeadBattery
HAL_PWREx_ConfigSupply
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_DMAEx_List_Init
HAL_DMA_ConfigChannelAttributes
HAL_ICACHE_ConfigAssociativityMode
HAL_ICACHE_Enable
memset
ARM GAS  C:\Users\soran\AppData\Local\Temp\cc3fJ5ML.s 			page 44


HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_ADCQueue_Config
HAL_DMAEx_List_LinkQ
HAL_ADC_Start_DMA
HAL_Delay
sprintf
ADCQueue
